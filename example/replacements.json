{
  "<b>unsupported</b>": "",
  "draw_listImGui_Image": "draw_list, ImGui_Image",
  "string namereaper_array values": "string name, reaper_array values",
  "ImGui_Context ctxImGui_Image img": "ImGui_Context ctx, ImGui_Image img",
  "optional integer flagsInImGui_Function callbackIn": "optional integer flagsIn, ImGui_Function callbackIn",
  "labelreaper_array": "label, reaper_array",
  "draw_listreaper_array": "draw_list, reaper_array",
  "size_max_hImGui_Function": "size_max_h, ImGui_Function",
  "ImGui_ImageSet  = reaper.ImGui_CreateImageSet()": "ImGui_ImageSet imageset = reaper.ImGui_CreateImageSet()",
  "ImGui_Context ctxImGui_Resource obj": "ImGui_Context ctx, ImGui_Resource obj",
  "optional string msgIn msgIn": "optional string msgIn",
  "number retval = gfx.printf(string format[, various ...])": "number retval = gfx.printf(string format, optional string various ...)",
  "gfx.triangle(integer x1, integer y1, integer x2, integer y2, integer x3, integer y3, [optional integer x4, optional integer y4, ...)": "gfx.triangle(integer x1, integer y1, integer x2, integer y2, integer x3, integer y3, optional integer x4, optional integer y4, ...)",
  "integer retval = {reaper.array}.convolve([reaper.array src, integer srcoffs, integer size, integer destoffs])": "integer retval = {reaper.array}.convolve(reaper.array src, integer srcoffs, integer size, integer destoffs)",
  "number inputlatency retval": "number inputlatency",
  "integer markeridx retval": "integer markeridx",
  "takename =": "string takename =",
  "TrackEnvelope =": "TrackEnvelope env =",
  ", integer number chan,": ", integer chan,",
  "number startTime retval": "number startTime",
  "MediaItem_Take takeWDL_FastString type": "MediaItem_Take take, WDL_FastString type",
  "gfx.gradrect(number x, number y, number w, number h, number r, number g, number b, number a[, optional number drdx, optional number dgdx, optional number dbdx, optional number dadx, optional number drdy, optional number dgdy, optional number dbdy, optional number dady])": "gfx.gradrect(number x, number y, number w, number h, number r, number g, number b, number a, optional number drdx, optional number dgdx, optional number dbdx, optional number dadx, optional number drdy, optional number dgdy, optional number dbdy, optional number dady)",
  "integer retval = gfx.init(string \"name\", optional integer width, optional integer height, optional integer dockstate, optional integer xpos, optional integer ypos)": "integer retval = gfx.init(string name, optional integer width, optional integer height, optional integer dockstate, optional integer xpos, optional integer ypos)",
  "ReaperArray reaper_array = reaper.new_array([table|array values], [integer size])": "ReaperArray reaper_array = reaper.new_array(optional table|array values, optional integer size)",
  "boolean retval = {reaper.array}.clear([number|string value, integer offset, integer size])": "boolean retval = {reaper.array}.clear(optional number|string value, optional integer offset, optional integer size)",
  "integer retval = {reaper.array}.copy([reaper.array src, integer srcoffs, integer size, integer destoffs])": "integer retval = {reaper.array}.copy(optional reaper.array src, optional integer srcoffs, optional integer size, optional integer destoffs)",
  "boolean retval = {reaper.array}.fft(integer size[, boolean permute, integer offset])": "boolean retval = {reaper.array}.fft(integer size, optional boolean permute, optional integer offset)",
  "boolean retval = {reaper.array}.fft_real(integer size[, boolean permute, integer offset])": "boolean retval = {reaper.array}.fft_real(integer size, optional boolean permute, optional integer offset)",
  "boolean retval = {reaper.array}.ifft(integer size[, boolean permute, integer offset])": "boolean retval = {reaper.array}.ifft(integer size, optional boolean permute, optional integer offset)",
  "boolean retval = {reaper.array}.ifft_real(integer size[, boolean permute, integer offset])": "boolean retval = {reaper.array}.ifft_real(integer size, optional boolean permute, optional integer offset)",
  "integer retvals = {reaper.array}.multiply([{reaper.array} src, integer srcoffs, integer size, number destoffs])": "integer retvals = {reaper.array}.multiply(optional reaper.array src, optional integer srcoffs, optional integer size, optional number destoffs)",
  "table new_table = {reaper.array}.table([integer offset, integer size])": "table new_table = {reaper.array}.table(optional integer offset, optional integer size)",
  "ImGui_DrawList draw_listImGui_Font font": "ImGui_DrawList draw_list, ImGui_Font font",
  " string str_idImGui_Image img": " string str_id, ImGui_Image img",
  " number scaleImGui_Image img": " number scale, ImGui_Image img",
  "ImGui_Context ctxImGui_Font font": "ImGui_Context ctx, ImGui_Font font",
  "ImGui_TextFilter filterImGui_Context ctx": "ImGui_TextFilter filter, ImGui_Context ctx",
  " integer command_id bool": " integer command_id",
  "gfx.blitext(source,coordinatelist,rotation)": "gfx.blitext(integer source, table coordinatelist, number rotation)",
  "olean retval = {reaper.array}.resize(size)": "olean retval = {reaper.array}.resize(integer size)"
}
